#!/bin/sh

[ $# -ne 1 ] && {
    echo "usage: `basename $0` build-root_dir" >&2
    exit 1
}
dir="$1"/debian

# Set soversion depending on whether we are running on vivid or wily.

distro=`lsb_release -c -s`

[ "$distro" = "vivid" ] && {
    suffix="-vivid"
}

echo "gen-debian-files: detected distribution: $distro"

full_version=`cat "${dir}"/VERSION${suffix}`
qt_full_version=`cat "${dir}"/QT-VERSION${suffix}`

major=`echo $full_version | cut -d'.' -f1`
minor=`echo $full_version | cut -d'.' -f2`
major_minor="${major}.${minor}"

qt_major=`echo $qt_full_version | cut -d'.' -f1`
qt_minor=`echo $qt_full_version | cut -d'.' -f2`
qt_major_minor="${qt_major}.${qt_minor}"

if [ "$distro" = "vivid" ]
then
    [ $major -gt 0 ] && {
        echo "impossible major version for Vivid: $major (Vivid major version must be 0)" >&2
        exit 1
    }
    [ $minor -lt 6 ] && {
        echo "impossible minor version for Vivid: $minor (Vivid minor version must be >= 6)" >&2
        exit 1
    }
    soversion=`expr $minor - 3`
else
    soversion="${major}.${minor}"
fi

[ "$distro" = "vivid" -a $qt_major -gt 0 ] && {
    echo "impossible Qt major version for Vivid: $qt_major (Vivid Qt major version must be 0)" >&2
    exit 1
}
qt_soversion="${qt_major}.${qt_minor}"

warning_msg()
{
    file=`basename "$@"`
    echo "`cat <<EOF
# This file is autogenerated. DO NOT EDIT!
#
# Modifications should be made to $file instead.
# This file is regenerated automatically in the clean target.
#
EOF`"
}

# Generate debian/control from debian/control.in, substituting the soversion for both libs.
# For wily onwards, we also add an entry for the vivid version to "Conflicts:" and "Replaces:".

infile="${dir}"/control.in
outfile="${dir}"/control
echo "`warning_msg $infile`" >"$outfile"
sed -e "s/@UNITY_SCOPES_SOVERSION@/${soversion}/" \
    -e "s/@UNITY_SCOPES_QT_SOVERSION@/${qt_soversion}/" "$infile" >>"$outfile"

[ "$distro" != "vivid" ] && {
    sed -i -e "Replaces: libunity-scopes0,/a\
\          libunity-scopes${so_version}," \
           -e "Conflicts: libunity-scopes0,/a\
\           libunity-scopes${so_version}," \
        "$outfile"
}

# Generate the install files, naming them according to the soversion.

# Install file for binary package
infile="${dir}"/libunity-scopes.install.in
outfile="${dir}"/libunity-scopes${soversion}.install
echo "`warning_msg $infile`" >"$outfile"
cat "$infile" >>"$outfile"

# Install file for dev package
infile="${dir}"/libunity-scopes-dev.install.in
outfile="${dir}"/libunity-scopes-dev.install
echo "`warning_msg $infile`" >"$outfile"
sed "s/@UNITY_SCOPES_SOVERSION@/${soversion}/" "$infile" >>"$outfile"

# Install file for click hook
infile="${dir}"/libunity-scopes.scope.click-hook.in
outfile="${dir}"/libunity-scopes${soversion}.scope.click-hook
echo "`warning_msg $infile`" >"$outfile"
cat "$infile" >>"$outfile"

# Symbols file for vivid or shlibs file for wily and later
if [ "$distro" = "vivid" ]
then
    infile="${dir}"/libunity-scopes.symbols.in
    outfile="${dir}"/libunity-scopes${soversion}.symbols
    sed "s/@UNITY_SCOPES_SOVERSION@/${soversion}/g" "$infile" >>"$outfile"
else
    infile="${dir}"/shlibs.in
    outfile="${dir}"/shlibs
    echo "`warning_msg $infile`" >"$outfile"
    sed -e "s/@UNITY_SCOPES_SOVERSION@/${soversion}/g" \
        -e "s/@UNITY_SCOPES_QT_SOVERSION@/${qt_soversion}/g" \
        -e "s/@UNITY_SCOPES_FULL_VERSION@/${full_version}/g" \
        -e "s/@UNITY_SCOPES_QT_FULL_VERSION@/${qt_full_version}/g" \
        -e "s/@UNITY_SCOPES_MAJOR_MINOR@/${major_minor}/g" \
        -e "s/@UNITY_SCOPES_QT_MAJOR_MINOR@/${qt_major_minor}/g" \
        "$infile" >>"$outfile"
fi

# Install file for qt binary package
infile="${dir}"/libunity-scopes-qt.install.in
outfile="${dir}"/libunity-scopes-qt${qt_soversion}.install
echo "`warning_msg $infile`" >"$outfile"
cat "$infile" >>"$outfile"

# Install file for qt dev package
infile="${dir}"/libunity-scopes-qt-dev.install.in
outfile="${dir}"/libunity-scopes-qt-dev.install
echo "`warning_msg $infile`" >"$outfile"
sed "s/@UNITY_SCOPES_QT_SOVERSION@/${qt_soversion}/" "$infile" >>"$outfile"

# Qt symbols file for vivid
[ "$distro" = "vivid" ] && {
    infile="${dir}"/libunity-scopes-qt.symbols.in
    outfile="${dir}"/libunity-scopes-qt${qt_soversion}.symbols
    sed "s/@UNITY_SCOPES_QT_SOVERSION@/${qt_soversion}/g" "$infile" >"$outfile"
}

exit 0
