//
// DO NOT EDIT Version.h (this file)! It is generated from Version.h.in.
//

/*
 * Copyright (C) 2013 Canonical Ltd
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Authored by: Michi Henning <michi.henning@canonical.com>
 */

#pragma once

#ifndef UNITY_SCOPES_VERSION_MAJOR
#    define UNITY_SCOPES_VERSION_MAJOR @UNITY_SCOPES_MAJOR@
#endif

#ifndef UNITY_SCOPES_VERSION_MINOR
#    define UNITY_SCOPES_VERSION_MINOR @UNITY_SCOPES_MINOR@
#endif

#ifndef UNITY_SCOPES_VERSION_MICRO
#    define UNITY_SCOPES_VERSION_MICRO @UNITY_SCOPES_MICRO@
#endif

#define UNITY_SCOPES_VERSION_STR(s) #s
#define UNITY_SCOPES_VERSION_XSTR(s) UNITY_SCOPES_VERSION_STR(s)

#define UNITY_SCOPES_VERSION_STRING UNITY_SCOPES_VERSION_XSTR(UNITY_SCOPES_VERSION_MAJOR) "." \
                                    UNITY_SCOPES_VERSION_XSTR(UNITY_SCOPES_VERSION_MINOR) "." \
                                    UNITY_SCOPES_VERSION_XSTR(UNITY_SCOPES_VERSION_MICRO)

#define UNITY_SCOPES_VERSIONED_CREATE_SYM unity_scope_create_v ## @UNITY_SCOPES_MAJOR@_@UNITY_SCOPES_MINOR@

/**
\brief Top-level namespace for all things Unity-related.
*/
namespace unity
{

/**
\brief Top-level namespace for public functionality of the Unity scopes API.
*/
namespace scopes
{

/** @name Version information

Version information is represented as
<i>&lt;<code>major</code>&gt;</i>.<i>&lt;<code>minor</code>&gt;</i>.<i>&lt;<code>micro</code>&gt;</i>.

Releases that differ in the major version number or minor are binary incompatible.

Releases of the library that differ in the micro version number are binary compatible with older releases,
so client code does not need to be recompiled to use the newer library version.

Changes in the micro version number indicate bug fixes or feature additions that are binary compatible.
*/

/**
\brief Returns the major version number of the Unity scopes library.

The major version number is also available as the macro <code>UNITY_SCOPES_VERSION_MAJOR</code>.
*/
int major_version();

/**
\brief Returns the minor version number of the Unity scopes library.

The minor version number is also available as the macro <code>UNITY_SCOPES_VERSION_MINOR</code>.
*/
int minor_version();

/**
\brief Returns the micro version number of the Unity scopes library.

The micro version number is also available as the macro <code>UNITY_SCOPES_VERSION_MICRO</code>.
*/
int micro_version();

/**
\brief Returns the Unity scopes version as a string in the format
<i>&lt;<code>major</code>&gt;</i>.<i>&lt;<code>minor</code>&gt;</i>.<i>&lt;<code>micro</code>&gt;</i>.

The version string is also available as the macro <code>UNITY_SCOPES_VERSION_STRING</code>.
*/
const char* version_string();    // Returns "major.minor.micro"

/// }@

// TODO: Add methods to report compiler version and compiler flags

} // namespace scopes

} // namespace unity
