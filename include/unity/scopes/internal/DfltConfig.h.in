/*
 * Copyright (C) 2013 Canonical Ltd
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Authored by: Michal Hruby <michal.hruby@canonical.com>
 */

#pragma once

namespace unity
{

namespace scopes
{

namespace internal
{

static constexpr char const* DFLT_RUNTIME_INI = "@CMAKE_INSTALL_PREFIX@/@LIB_INSTALL_PREFIX@/@UNITY_SCOPES_LIB@/Runtime.ini";
static constexpr char const* DFLT_REGISTRY_INI = "@CMAKE_INSTALL_PREFIX@/@LIB_INSTALL_PREFIX@/@UNITY_SCOPES_LIB@/Registry.ini";
static constexpr char const* DFLT_REGISTRY_ID = "Registry";
static constexpr char const* DFLT_SS_REGISTRY_INI = "@CMAKE_INSTALL_PREFIX@/@LIB_INSTALL_PREFIX@/@UNITY_SCOPES_LIB@/Smartscopes.ini";
static constexpr char const* DFLT_SS_REGISTRY_ID = "SSRegistry";
static constexpr char const* DFLT_SCOPERUNNER_PATH = "@CMAKE_INSTALL_PREFIX@/@LIB_INSTALL_PREFIX@/@UNITY_SCOPES_LIB@/scoperunner";
static constexpr char const* DFLT_MIDDLEWARE = "Zmq";
static constexpr char const* DFLT_ZMQ_MIDDLEWARE_INI = "@CMAKE_INSTALL_PREFIX@/@LIB_INSTALL_PREFIX@/@UNITY_SCOPES_LIB@/Zmq.ini";
static constexpr char const* DFLT_MIDDLEWARE_INI = DFLT_ZMQ_MIDDLEWARE_INI;
static constexpr char const* DFLT_SCOPE_INSTALL_DIR = "@CMAKE_INSTALL_PREFIX@/@LIB_INSTALL_PREFIX@/@UNITY_SCOPES_LIB@";
static constexpr char const* DFLT_OEM_INSTALL_DIR = "/custom/@LIB_INSTALL_PREFIX@/@UNITY_SCOPES_LIB@";

static constexpr int DFLT_SS_HTTP_TIMEOUT = 20;              // seconds
static constexpr int DFLT_SS_REG_REFRESH_RATE = 86400;       // 24 hours as seconds
static constexpr int DFLT_SS_REG_REFRESH_FAIL_TIMEOUT = 10;  // seconds
static constexpr int DFLT_SCOPE_IDLE_TIMEOUT = 40;           // seconds

static constexpr char const* DFLT_SS_SCOPE_IDENTITY = "SmartScope";

static constexpr int DFLT_REAP_EXPIRY = 45;                  // seconds
static constexpr int DFLT_REAP_INTERVAL = 10;                // seconds
static constexpr int DFLT_PROCESS_TIMEOUT = 4000;            // milliseconds
static constexpr int DFLT_DEBUG_PROCESS_TIMEOUT = 30000;     // milliseconds
static constexpr int DFLT_ZMQ_TWOWAY_TIMEOUT = 500;          // milliseconds
static constexpr int DFLT_ZMQ_LOCATE_TIMEOUT = 5000;         // milliseconds
static constexpr int DFLT_ZMQ_DEBUG_LOCATE_TIMEOUT = 30000;  // milliseconds
static constexpr int DFLT_ZMQ_REGISTRY_TIMEOUT = 5000;       // milliseconds
static constexpr int DFLT_ZMQ_CHILDSCOPES_TIMEOUT = 2000;    // milliseconds

static constexpr char const* DFLT_HOME_CACHE_SUBDIR = ".local/share/unity-scopes";
static constexpr char const* DFLT_HOME_APP_SUBDIR = ".local/share";
static constexpr char const* DFLT_HOME_CONFIG_SUBDIR = ".config/unity-scopes";
static constexpr char const* DFLT_HOME_LOG_SUBDIR = ".local/share/unity-scopes";

static constexpr int DFLT_MAX_LOG_FILE_SIZE = 512 * 1024;       // bytes, individual file size
static constexpr int DFLT_MAX_LOG_DIR_SIZE = 2 * 1024 * 1024;   // bytes, sum of file sizes

static constexpr bool DFLT_LOCATION_PERMITTED = true;    // Whether a scope that wants location data, but does not
                                                         // have a settings.ini file yet, actually gets the data.

} // namespace internal

} // namespace scopes

} // namespace unity
