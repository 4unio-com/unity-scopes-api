#
# Copyright (C) 2013 Canonical Ltd
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License version 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Authored by: Michi Henning <michi.henning@canonical.com>
#

-------------------------------------------------------------------------------------
NOTE: Before making changes to the code, please read the README file in its entirety!
-------------------------------------------------------------------------------------


Build dependencies
------------------

See debian/control for the list of packages required to build and test the code.

Most notably:
  $ sudo apt-get install libunity-api-dev liblttng-ust-dev libzmq3-dev libzmqpp-dev libcapnp-dev


Building the code
-----------------

The simplest case is:

    $ mkdir build
    $ cd build
    $ cmake ..
    $ make

By default, the code is built in release mode. To build a debug version, use

    $ mkdir builddebug
    $ cd builddebug
    $ cmake -DCMAKE_BUILD_TYPE=debug ..
    $ make


Running the tests
-----------------

    $ make
    $ make test


Documentation
-------------

To generate the doc:

    $ make doc

By default, this target generates documentation only for the public API.

You can set the cmake option DEVEL_DOCS=ON to generate documentation that includes the internal API:

    $ cmake -DDEVEL_DOCS=ON ..

This is useful mainly for browsing--the internal API does not include doxygen comments.


Installation
------------

To get files that form part of an installation, run a "make install"
in the build directory. By default, this installs them in the "install"
subdirectory of the build directory. If you want to install into a
different directory, use

$ cmake -DCMAKE_INSTALL_PREFIX=/usr/local # Or wherever...
$ make release
$ make install
